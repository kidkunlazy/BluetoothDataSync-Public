name: Android CI/CD

# 您的双触发条件，已完整保留
on:
  push:
    # 1. 当代码被推送到 Nightly 分支时触发
    branches:
      - Nightly
    # 2. 当一个以 'v' 开头的标签被推送到仓库时也触发
    tags:
      - 'v*.*.*'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    # +++ 【关键新增】在这里为任务授予写入内容的权限 +++
    permissions:
      contents: write

    steps:
    # --- 后面的所有步骤都和您提供的一模一样，保持不变 ---
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    
    - name: Set up Android SDK
      uses: android-actions/setup-android@v3

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build unsigned APK
      run: ./gradlew assembleRelease

    - name: Sign APK
      uses: ilharp/sign-android-release@v2
      id: sign_app
      with:
        releaseDir: app/build/outputs/apk/release
        signingKey: ${{ secrets.MY_SIGNING_KEY_BASE64 }}
        keyAlias: ${{ secrets.MY_KEY_ALIAS }}
        keyStorePassword: ${{ secrets.MY_KEYSTORE_PASSWORD }}
        keyPassword: ${{ secrets.MY_KEY_PASSWORD }}
        buildToolsVersion: 36.0.0

    # 步骤 7A: 如果是推送到 Nightly 分支，则作为 Artifacts 上传
    - name: Upload APK as Artifact (for Nightly branch)
      uses: actions/upload-artifact@v4
      if: startsWith(github.ref, 'refs/heads/Nightly')
      with:
        name: app-snapshot-signed
        path: ${{ steps.sign_app.outputs.signedFile }}

    # 步骤 7B: 如果是推送了 v*.*.* 标签，则创建正式的 Release
    - name: Create GitHub Release (for v* tags)
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/v')
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        files: ${{ steps.sign_app.outputs.signedFile }}